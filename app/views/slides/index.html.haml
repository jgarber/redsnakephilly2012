#impress.impress-not-supported
  .fallback-message
    %p Your browser doesn't support the features required by impress.js, so you are presented with a simplified version of this presentation.
    %p For the best experience please use the latest Chrome, Safari or Firefox browser. Upcoming version 10 of Internet Explorer should also handle it.
  
  #title.step.slide{data: {x: -1000, y: -1500}}
    %h1 What goes on under the Red Cloth?
    = image_tag 'footsie.jpg'
    
  #about.step.slide{data: {x:-1000, y:-1500, z: -1, 'rotate-x' => -180}}
    .name Jason Garber
    = image_tag 'JasonGarber.jpg'
    .urls
      .github
        %a{href: "https://github.com/jgarber"} jgarber
      .twitter
        %a{href: "http://twitter.com/jasongarber"} @jasongarber
      .blog
        %a{href: 'http://jasongarber.com/'} http://jasongarber.com
  #textile.step.slide{data: {x:0, y:-1500, 'rotate-x' => -180}}
    %pre
      :preserve
        h1. Give RedCloth a try!

        A *simple* paragraph with
        a line break, some _emphasis_ and a "link":http://redcloth.org

        * an item
        * and another

        # one
        # two
        # three
  #textile-result.step.slide{data: {x:1000, y:-1500}}
    :textile
      h1. Give RedCloth a try!

      A *simple* paragraph with
      a line break, some _emphasis_ and a "link":http://redcloth.org

      * an item
      * and another

      # one
      # two
      # three
  #textile-benefits.step{data: {x: 1000, y:-2500, rotate: 90}}
    :textile
      * A “shortcut” to HTML
      * Quick to type
      * Easy to remember
      * Markup for nearly everything in HTML
  #markdown-textile-comparison.step{data: {x: -200, y:-2500, rotate: 180, scale: 1.6}}
    %pre
      :preserve
        A First Level Header
        ====================

        A Second Level Header
        ---------------------

        ### Header 3

        This is an [example link](http://example.com/).

        Some __bold__ and *italics* text.

        Instantiate with the `new` method

            def initialize(foo)
                @foo = foo
            end

        > This is a blockquote. 
        > You prepend every line with a
        > greater-than character.

        1. One
        2. Two (added later)
        2. Three
        3. Four
    %pre
      :preserve
        h1. A First Level Header


        h2. A Second Level Header


        h3. Header 3

        This is an "example link":http://example.com/.

        Some *bold* and _italics_ text.

        Instantiate with the @new@ method

        bc. def initialize(foo)
          @foo = foo
        end

        bq. This is a blockquote. You don't have to prepend every line with anything.

        # One
        # Two (added later)
        # Three
        # Four
  .redcloth-timeline
    .contributions
      #why why@whytheluckystiff.net (115 commits, 19950 additions, 6128 deletions)
      #jgarber jgarber (391 commits, 28518 additions, 22430 deletions)
    = image_tag 'redcloth-impact.png'
    #why-starts.event.step{data: {x: -5575, y:350, scale:1, 'rotate-y' => -45}}
      %h3 15 Jun 2003
      %p Why the Lucky Stiff starts the project
      .commit
        = image_tag 'why.jpg'
        Initial revision
        .sha 7b1639cb7f01e51a85808a03e6991e0e895be6fa
    #regexp-parser.step.slide{data: {x: -5575, y: 1100}}
      Regular expressions
      %pre= render 'regexp_code'
    #jason-contributes.event.top.step{data: {x: -2075, y:160, 'rotate-y' => -10}}
      %h3 14 Jan 2007
      %p I fix a few bugs
      .commit
        = image_tag 'jgarber.jpg'
        Convert tabs to spaces
        .sha 48225469f51cecc69b5b247894faac266011cbdd
    #superredcloth.event.step{data: {x: -1795, y:350, z: -100, 'rotate-y' => 5}}
      %h3 21 Jan 2007
      %p _why starts SuperRedCloth
      .commit
        = image_tag 'why.jpg'
        **SUPER RED CLOTH**AYAAYY 
        .sha b3cb1a703063ce1f49bfd28574fa6c89be1b389f
    #ragel-parser.step.slide{data: {x: -1795, y: 700, z: 500, 'rotate-x' => 90}}
      %h3 Ragel State Machine Compiler
      %p
        = image_tag "ragel-code.png"
        = image_tag "Ragel_visualisation.png"
      %small Mongrel • Hpricot • Perian • Gherkin • Lightttpd
    #ragel-pro.step.slide{data: {x: -795, y: 700, z: 500, 'rotate-x' => 90}}
      :textile
        h3. The good:
        * String manipulation done in C
        * Wicked fast -- 40x faster!
        * Fairly readable
    #jason-picks-up-super.event.top.step{data: {x: -1295, y:150, z: 400, 'rotate-y' => -15}}
      %h3 16 Jul 2007
      %p I start hacking on SuperRedCloth
      .commit
        = image_tag 'jgarber.jpg'
        Fixed last character of URL being eaten (#18)
        .sha 628571321b485fe020ec13263965dac211fbb469
    #merge-to-trunk.event.step{data: {x: 0, y:350, z: -100, 'rotate-y' => -8}}
      %h3 17 Mar, 2008
      .commit
        = image_tag 'why.jpg'
        Merge SuperRedCloth to trunk. Brilliant work by Jason Garber!! 
        .sha 671db45ee687f8ff0bf8e19967592ad51fe85624
    #ownership.event.top.step{data: {x: 100, y:150, z: 400, scale: 0.8, 'rotate-y' => -10}}
      %h3 20 Mar, 2008
      .commit
        = image_tag 'why.jpg'
        Transfering copyright and attribution to Jason. Just totally excellent work!
        .sha f0bfa2eca2978643e0b37153b5567ee7c157747e
    #summer-2008.top.step{data: {x: 1000, y:240, z:10}}
      Other contributors!
    #four-oh.event.step{data: {x: 1600, y:250}}
      %h3 21 Jul, 2008
      .commit
        = image_tag 'jgarber.jpg'
        Release RedCloth 4.0
        .sha 25f3bc3b7f4a67c1bc7d5920cdfd6482540a0108
    #jruby.event.top.step{data: {x: 2400, y:200, 'rotate-x'=> -5, 'rotate-y' => -5}}
      %h3 22 Oct, 2008
      .commit
        = image_tag 'olabini.jpg'
        Support for JRuby
    #things-get-messy.step{data: {x: 3000, y:200, scale: 3.5, 'rotate-y' => -20, 'rotate-x' => 15}}
    #ragel-con.step.slide{data: {x: 3000, y: 700, z: 1400, 'rotate-z' => 180}}
      :textile
        h3. The bad:
        * Ambiguity - simultaneous states
        * Debugging / Complexity
        * Requires compilation
        * Platform-bound
        * Precompiled gems
        * Few contributors
        
        Now in an unmaintainable state!
    #redcloth-treetop.step{data: {x: 4000, y: -50, z: -300, scale: 0.8}}
      %h3 Summer, 2009 RedCloth rewrite in Treetop
      = image_tag 'redcloth-treetop-impact.png'
    #treetop-parser.step.slide{data: {x: 4500, y: -300, z: 200, 'rotate-y' => -90}}
      Treetop (PEG parser generator)
      %pre= render 'treetop_code'
      %p The good: no C or Java!
    #treetop-con.step.slide{data: {x: 4800, y: -300, z: 200, 'rotate-y' => 90}}
      :textile
        h3. The bad:
        * Slow - automatic AST
        * Requires compilation
        * Tough to debug
        
        Abandoned the rewrite in September, 2009.
        
        Ironically, Gherkin (Cucumber) switched from Treetop to Ragel.
    #redcloth-parslet.step{data: {x: 5800, y: -50, z: -300, scale: 0.8}}
      %h3 RedCloth rewrite in Parslet
      = image_tag 'redcloth-parslet-impact.png'
    #parslet-parser.step.slide{data: {x: 6500, y: -600, z: -10, 'rotate-y' => -30}}
      %h3 Parslet (Parsing Expression Grammar)
      = image_tag 'parslet-code.png'
    #parslet-code.step.slide{data: {x: 7400, y: -600, z: -30, 'rotate-y' => 40}}
      = render 'parslet_code'
    #parslet-pros.step.slide{data: {x: 8200, y: -600, z: -40, 'rotate-y' => -40}}
      :textile
        h3. What I like:
        
        * Just Ruby
        * No compilation
        * Easy DSL
        * Only captures what you want
        ...as PORO!
        * Easily extensible
        * I can write granular specs
        * Awesome error output
        * It's fast enough
    #conclusion.step.slide{data: {x: 7200, y: 100, z: 200, 'rotate-y' => -50}}
      :textile
        h3. Expectations for RedCloth 5
        
        * More contributors again
        * Easier bug fixing
        * Few regressions
        * Easy to customize the parser
        * Runs everywhere
  